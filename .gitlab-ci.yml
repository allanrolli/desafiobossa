image: docker:stable
services:
  - docker:dind
variables:  
  CONTAINER_IMAGE: $ACR_NAME/desafiobossa:latest
  VERSION: $CONTAINER_IMAGE:$CI_PIPELINE_IID
  VERSION_LAST: $CONTAINER_IMAGE:latest
  VERSION_HOMOLOG: $CONTAINER_IMAGE:homolog_$CI_PIPELINE_IID
  VERSION_TEST: $CONTAINER_IMAGE:test_$CI_PIPELINE_IID
  VERSION_PROD: $CONTAINER_IMAGE:prod_$CI_PIPELINE_IID

stages:  
  - build_test
  - deploy_test   

build_test:
  stage: build_test
  script:
    - docker login $ACR_NAME --username $SP_TENANT_ID --password $SP_PASSWD
    # - docker login  -u 57c5a019-3b92-4e44-8ce9-a564b0775075 -p X_KN5funxWxh-HxzFg_Vm~wNLjvD214fbo 
    # - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    # - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE

deploy_test:
  stage: deploy_test
  image: alpine
  environment:
    name: test
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - echo $KUBERNETES | base64 -d > $HOME/.kube/config
    - export KUBECONFIG=$HOME/.kube/config    
    - kubectl get pods
    - curl -LO https://storage.googleapis.com/kubernetes-helm/helm-v2.8.2-linux-amd64.tar.gz
    - tar -zxvf ./helm-v2.8.2-linux-amd64.tar.gz
    - mv ./linux-amd64/helm /usr/local/bin/helm    
    - kubectl apply -f ./cluster/deployment.yaml
    - kubectl apply -f ./cluster/service.yaml
    - kubectl apply -f ./cluster/ingress.yaml
  only:
    - master


