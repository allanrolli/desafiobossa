trigger: none

stages:
- stage: 'buildstage'
  jobs:
  - job: 'buildjob'
    pool: 
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    # - bash: ls -lha
    #   displayName: 'LS'

    - bash: docker build -t defect .
      displayName: 'Build Image'

    - bash: docker run -d -p 3000:3000 defect
      displayName: 'App Container'

    - task: Bash@3
      displayName: 'Owasp Container Scan'
      inputs:
        targetType: 'inline'
        script: |
          chmod -R 777  ./
                  docker run --rm -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py -t http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1):3000 -x 
          xml_report.xml
                  true
    - task: PowerShell@2
      displayName: 'PowerShell Script'
      inputs:
        targetType: 'inline'
        script: |          
          $XsltSettings = New-Object System.Xml.Xsl.XsltSettings
          $XsltSettings.EnableDocumentFunction = 1
          $XmlInputFile = "xml_report.xml"
          $XmlOutputFile = "converted_report.xml"
          $XslTransform = New-Object System.Xml.Xsl.XslCompiledTransform
          $XSLInputElement.Transform($XMLInputFile, $XMLOutputFile) 
          

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: 'converted_report.xml'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'converted_report.xml'
        ArtifactName: 'project'
        publishLocation: 'Container'